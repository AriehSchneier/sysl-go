let fatal = //{./fatal};

# `paramValidateTags` returns a mapping of an endpoint parameter name to the `validate` struct tags
# set against the endpoint. Endpoints support the encoding of `validate` tags either in the form 
# of a single string delimited by a space (1) or a string array for instances where the tags
# themselves include spaces:
# `/query/{age <: int}/{height <: int} [validate="age:min=0,max=100 height:min=0"]  [1]
# `/query/{age <: int}/{height <: int} [validate=["age:oneof=1 2","height:min=0"]]  [2]
# 
# `ep` is the sysl.proto representation of an endpoint.
# 
# Example response:
# `{'age':'validate:min=0,max=100', 'height':'validate:min=0'}`
let paramValidateTags = \ep
    let split = \delim \seq let [head, ...tail] = //seq.split(delim, seq); [head, //seq.join(delim, tail)];
    let tags = \string split(':', string) -> (@:.(0), @value:.(1));
    cond ep('attrs')?('validate')?:{} {
        {'s':v, ...}: //seq.split(' ', v.s) => tags(.@item),
        {'a':{'elt':(a:a)}, ...}: a => let {'s':(s:s), ...} = .@item; tags(s),
    };

(
    :paramValidateTags,
)