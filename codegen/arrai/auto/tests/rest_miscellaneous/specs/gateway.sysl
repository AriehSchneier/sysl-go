import encoder_backend

Gateway [package="gateway", ~vars_in_url_name]:
    @go_package = "gateway"
    @go_pb_package = "github.com/anz-bank/sysl-go/codegen/auto_tests/rest_miscellaneous"

    /ping/id:
        GET ?id=int:
            EncoderBackend <- GET /ping
            return ok <: pong

    # should not conflict due to ~vars_in_url_name
    /ping/{id <: int}/id:
        GET:
            return ok <: pong

    !type Pong:
        identifier <: int

    /ping/binary:
        POST (GatewayBinaryRequestRequest <: GatewayBinaryRequest [mediatype="application/json", ~body]):
            return ok <: GatewayBinaryResponse

    !type GatewayBinaryRequest:
        content <: bytes

    !type GatewayBinaryResponse:
        content <: bytes

    /ping-string/{s <: string}:
        GET:
            EncoderBackend <- GET /ping-string/{s}
            return ok <: PongString

    !type PongString:
        s <: string

GatewayWithBff [package="gatewayWithBff"]:
    @basePath = "bff"
    @go_package = "gatewayWithBff"
    @go_pb_package = "github.com/anz-bank/sysl-go/codegen/auto_tests/rest_miscellaneous"

    /ping/binary:
        POST (GatewayBinaryRequestRequest <: GatewayBinaryRequest [mediatype="application/json", ~body]):
            return ok <: GatewayBinaryResponse

    !type GatewayBinaryRequest:
        content <: bytes

    !type GatewayBinaryResponse:
        content <: bytes
