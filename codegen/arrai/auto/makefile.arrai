let sysl = //{./sysl};
let [_, template, spec, ...apps] = //os.args;
let quoteSpaced = 
    let hasSpace = //re.compile('\\s').match;
    \s cond {hasSpace(s): $`'${s}'`, _: s};
let apps = apps >> sysl.splitAppAndPkgName(.);
$`
    SYSLGO_SYSL=${spec}
    SYSLGO_PACKAGES=${//seq.join(' ', apps >> .pkg)}
    ${cond {(template != ''): $`TEMPLATE=${template}`}}
    ${
        apps >> $`SYSLGO_APP.${.pkg} = ${quoteSpaced(.app)}`
    ::\i:\n}
    -include local.mk
    include codegen.mk

    .PHONY: clean
    clean:
    	rm -rf internal/gen

    .PHONY: test
    test: gen-all-servers
    	go test $(GO_TEST_FLAGS) ./...

`
